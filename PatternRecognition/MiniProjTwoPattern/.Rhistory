mu1 = c(5,1)
mu2 = c(1,7)
sigma1 = matrix(c(3.1,1,1,2.6), nrow = 2)
sigma1
sigma2 = sigma1
sigma2
sigma2
?mahalanobis
?mahalanobis
?mahal
install.packages("dismo")
?mahal
##priors P(w1) = 4P(w2)
library(dismo)
?mahal
?gaussian
det(sigma1)
##functions
getMahal <- function(x1, x2, covMat, mu)
{
x1 = (sqrt(t(x1 - mu) %*% inv(covMat) %*% (x1 - mu)))
x2 = (sqrt(t(x2 - mu) %*% inv(covMat) %*% (x2 - mu)))
print(x1)
print(x2)
difMal =abs(x1 -x2)
print(difMal)
}
source("D:/Docs/Homework/MiniProjTwoPattern/minProj2Script.R", echo=TRUE)
##functions
getMahal <- function(x1, x2, covMat, mu)
{
x1M = (sqrt(t(x1 - mu) %*% inv(covMat) %*% (x1 - mu)))
x2M = (sqrt(t(x2 - mu) %*% inv(covMat) %*% (x2 - mu)))
x12M = (sqrt(t(x1 - x2) %*% inv(covMat) %*% (x1 - m2)))
print(x1M)
print(x2M)
print(x12M)
difMal =abs(x1 -x2)
print(difMal)
}
##functions
getMahal <- function(x1, x2, covMat, mu)
{
x1M = (sqrt(t(x1 - mu) %*% inv(covMat) %*% (x1 - mu)))
x2M = (sqrt(t(x2 - mu) %*% inv(covMat) %*% (x2 - mu)))
x12M = (sqrt(t(x1 - x2) %*% inv(covMat) %*% (x1 - m2)))
print(x1M)
print(x2M)
print(x12M)
difMal =abs(x1 -x2)
print(difMal)
}
